<?xml version="1.0"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <connectionStrings>
    <add name="mssql-local" connectionString="Data Source=WSWINCNHZ1126;Initial Catalog=master;Integrated Security=True;Min Pool Size=1;Max Pool Size=1000;Load Balance Timeout=30;"/>
  </connectionStrings>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
  </configSections>
  
  <!--<unity>
    <typeAliases>
      --><!-- Lifetime manager types --><!--
      <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager,  Microsoft.Practices.Unity"/>
      <typeAlias alias="perThread" type="Microsoft.Practices.Unity.PerThreadLifetimeManager, Microsoft.Practices.Unity"/>
      <typeAlias alias="external" type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager, Microsoft.Practices.Unity"/>
      --><!-- User-defined type aliases --><!--
      <typeAlias alias="IMyInterface" type="MyApplication.MyTypes.MyInterface, MyApplication.MyTypes"/>
      <typeAlias alias="MyRealObject" type="MyApplication.MyTypes.MyRealObject, MyApplication.MyTypes"/>
      <typeAlias alias="IMyService" type="MyApplication.MyTypes.MyService, MyApplication.MyTypes"/>
      <typeAlias alias="MyDataService" type="MyApplication.MyTypes.MyDataService, MyApplication.MyTypes"/>
      <typeAlias alias="MyCustomLifetime" type="MyApplication.MyLifetimeManager, MyApplication.MyTypes"/>
    </typeAliases>
    <containers>
      <container name="containerOne">
        <types>
          --><!-- Type mapping with no lifetime — defaults to "transient" --><!--
          <type type="BusinessLayer.BaseClass" mapTo="BusinessLayer.ConcreteClass01"/>
          --><!-- Type mapping using aliases defined above --><!--
          <type type="BusinessLayer.IInterface007" mapTo="BusinessLayer.RealObject" name="MyMapping"/>
          --><!-- Lifetime managers specified using the type aliases --><!--
          <type type="BusinessLayer.BaseClass" mapTo="BusinessLayer.ConcreteClass02">
            <lifetime type="singleton"/>
          </type>
          <type type="BusinessLayer.IInterface007" mapTo="BusinessLayer.RealObject001" name="RealObject001">
            <lifetime type="perThread"/>
          </type>
          <type type="BusinessLayer.IInterface007" mapTo="BusinessLayer.RealObject002" name="RealObject002">
            <lifetime type="external"/>
          </type>
          --><!-- Lifetime manager specified using the full type name --><!--
          --><!-- Any initialization data specified for the lifetime manager --><!--
          --><!-- will be converted using the default type converter --><!--
          <type type="BusinessLayer.BaseClass" mapTo="BusinessLayer.ConcreteClass03">
            <lifetime value="sessionKey" type="AOPLifetimeManager.LifetimeManager,                           AOPLifetimeManager"/>
          </type>
          --><!-- Lifetime manager initialization using a custom TypeConverter --><!--
          <type type="AOPLifetimeManager.IInterface008" mapTo="BusinessLayer.RealObject" name="CustomSession">
            <lifetime type="AOPLifetimeManager.CustomLifetime" value="ReverseKey" typeConverter="AOPLifetimeManager.TypeConverter,                                    AOPLifetimeManager"/>
          </type>
          --><!-- Object with injection parameters defined in configuration --><!--
          --><!-- Type mapping using aliases defined above --><!--
          <type type="IService007" mapTo="BusinessLayer.DataService" name="DataService">
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement,                                      Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="connectionString" parameterType="string">
                  <value value="AdventureWorks"/>
                </param>
                <param name="logger" parameterType="AOPLifetimeManager.ILogger">
                  <dependency/>
                </param>
              </constructor>
              <property name="Logger" propertyType="AOPLifetimeManager.ILogger"/>
              <method name="Initialize">
                <param name="connectionString" parameterType="string">
                  <value value="contoso"/>
                </param>
                <param name="dataService" parameterType="IService007">
                  <dependency/>
                </param>
              </method>
            </typeConfig>
          </type>
        </types>
        <instances>
          <add name="MyInstance1" type="System.String" value="Some value"/>
          <add name="MyInstance2" type="System.DateTime" value="2008-02-05T17:50:00"/>
        </instances>
        --><!--<extensions>
        <add type="MyApp.MyExtensions.SpecialOne" />
      </extensions>

      <extensionConfig>
        <add name="MyExtensionConfigHandler"
             type="MyApp.MyExtensions.SpecialOne.ConfigHandler" />
      </extensionConfig>--><!--
      </container>
    </containers>
  </unity>-->
  <!--
    For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.5" />
      </system.Web>
  -->
  <system.web>
    <compilation debug="true" targetFramework="4.5"/>
    <httpRuntime/>
    <pages controlRenderingCompatibilityVersion="4.0"/>
  </system.web>
  <system.webServer>
    <handlers>
      <remove name="ExtensionlessUrlHandler-Integrated-4.0"/>
      <remove name="OPTIONSVerbHandler"/>
      <remove name="TRACEVerbHandler"/>
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0"/>
    </handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-9.0.0.0" newVersion="9.0.0.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>