<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
  </configSections>

  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <namespace name="Microsoft.Practices.Unity.TestSupport" />
    <assembly name="Unity.TestSupport" />

    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration" />

    <container name="emptyPolicies">
      <interception />
    </container>

    <container name="oneEmptyPolicy">
      <extension type="Interception" />

      <interception>
        <policy name="policyOne" />
      </interception>
    </container>


    <container name="explicitPolicyCollection">
      <interception>
        <policies>
          <add name="policyOne" />
          <add name="policyTwo" />
        </policies>
      </interception>
    </container>

    <container name="implicitPolicyCollection">
      <interception>
        <policy name="policyA" />
        <policy name="policyB" />
      </interception>
    </container>

    <container name="policyWithNamedMatchingRules">
      <interception>
        <policy name="policyOne">
          <matchingRule name="ruleOne" />
          <matchingRule name="ruleTwo" />
        </policy>
      </interception>
    </container>

    <!--<container name="CanSetUpAPolicyWithGivenRulesAndHandlersTypes">
      <extensions>
        <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
      </extensions>
      <extensionConfig>
        <add name="interception"
             type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationElement, Microsoft.Practices.Unity.Interception.Configuration">
          <policies>
            <policy name="policyOne">
              <matchingRules>
                <matchingRule name="rule1" type="AlwaysMatchingRule"/>
              </matchingRules>
              <callHandlers>
                <callHandler name="handler1" type="GlobalCountCallHandler"/>
              </callHandlers>
            </policy>
          </policies>
        </add>
      </extensionConfig>
    </container>-->

    <container name="policyWithGivenRulesAndHandlersTypes">
      <extension type="Interception" />

      <interception>
        <policy name="policyOne">
          <matchingRule name="rule1" type="AlwaysMatchingRule" />
          <callHandler name="handler1" type="GlobalCountCallHandler" />
        </policy>
      </interception>

    </container>

    <!--<container name="CanSetUpAPolicyWithExternallyConfiguredRulesAndHandlers">
      <extensions>
        <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
      </extensions>
      <types>
        <type name="rule1" type="IMatchingRule" mapTo="AlwaysMatchingRule">
        </type>
        <type name="handler1" type="ICallHandler" mapTo="GlobalCountCallHandler">
          <typeConfig>
            <constructor>
              <param name="name" parameterType="string">
                <value value="handler1" />
              </param>
            </constructor>
          </typeConfig>
        </type>
        <type name="handler2" type="ICallHandler" mapTo="GlobalCountCallHandler">
          <typeConfig>
            <constructor>
              <param name="name" parameterType="string">
                <value value="handler2" />
              </param>
            </constructor>
            <property name="Order" propertyType="int">
              <value value="10" type="int"/>
            </property>
          </typeConfig>
        </type>
      </types>
      <extensionConfig>
        <add name="interception"
             type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationElement, Microsoft.Practices.Unity.Interception.Configuration">
          <policies>
            <policy name="policyOne">
              <matchingRules>
                <matchingRule name="rule1"/>
              </matchingRules>
              <callHandlers>
                <callHandler name="handler1"/>
                <callHandler name="handler2"/>
              </callHandlers>
            </policy>
          </policies>
        </add>
      </extensionConfig>
    </container>-->

    <container name="policyWithExternallyConfiguredRulesAndHandlers">
      <extension type="Interception" />

      <register type="IMatchingRule" name="rule1" mapTo="AlwaysMatchingRule" />

      <register type="ICallHandler" name="handler1" mapTo="GlobalCountCallHandler">
        <constructor>
          <param name="callHandlerName" value="handler1" />
        </constructor>
      </register>

      <register type="ICallHandler" name="handler2" mapTo="GlobalCountCallHandler">
        <constructor>
          <param name="callHandlerName" value="handler2" />
        </constructor>
        <property name="Order" value="10" />
      </register>

      <interception>
        <policy name="policyOne">
          <matchingRule name="rule1" />
          <callHandler name="handler1" />
          <callHandler name="handler2" />
        </policy>
      </interception>
    </container>

    <!--<container name="CanSetUpAPolicyWithInjectedRulesAndHandlers">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <extensionConfig>
          <add name="interception"
               type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationElement, Microsoft.Practices.Unity.Interception.Configuration">
            <policies>
              <policy name="policyOne">
                <matchingRules>
                  <matchingRule name="rule1" type="AlwaysMatchingRule">
                    <injection/>
                  </matchingRule>
                </matchingRules>
                <callHandlers>
                  <callHandler name="handler1" type="GlobalCountCallHandler">
                    <injection>
                      <constructor>
                        <param name="name" parameterType="string">
                          <value value="handler1" />
                        </param>
                      </constructor>
                    </injection>
                  </callHandler>
                  <callHandler name="handler2" type="GlobalCountCallHandler">
                    <injection>
                      <constructor>
                        <param name="name" parameterType="string">
                          <value value="handler2" />
                        </param>
                      </constructor>
                      <property name="Order" propertyType="int">
                        <value value="10" type="int"/>
                      </property>
                    </injection>
                  </callHandler>
                </callHandlers>
              </policy>
            </policies>
          </add>
        </extensionConfig>
      </container>-->

    <container name="policyWithInjectedRulesAndHandlers">
      <extension type="Interception" />

      <interception>
        <policy name="policyOne">
          <matchingRule name="rule1" type="AlwaysMatchingRule" />
          <callHandler name="handler1" type="GlobalCountCallHandler">
            <constructor>
              <param name="callHandlerName" value="handler1" />
            </constructor>
          </callHandler>
          <callHandler name="handler2" type="GlobalCountCallHandler">
            <constructor>
              <param name="callHandlerName" value="handler2" />
            </constructor>
            <property name="Order" value="10" />
          </callHandler>
        </policy>
      </interception>
    </container>

    <!--<container name="CanSetUpAPolicyWithLifetimeManagedInjectedRulesAndHandlers">
      <extensions>
        <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
      </extensions>
      <extensionConfig>
        <add name="interception"
             type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationElement, Microsoft.Practices.Unity.Interception.Configuration">
          <policies>
            <policy name="policyOne">
              <matchingRules>
                <matchingRule name="rule1" type="AlwaysMatchingRule">
                  <lifetime type="singleton" />
                </matchingRule>
                <matchingRule name="rule2" type="AlwaysMatchingRule"/>
              </matchingRules>
              <callHandlers>
                <callHandler name="handler1" type="GlobalCountCallHandler">
                  <lifetime type="singleton" />
                  <injection>
                    <constructor>
                      <param name="name" parameterType="string">
                        <value value="handler1" />
                      </param>
                    </constructor>
                  </injection>
                </callHandler>
                <callHandler name="handler2" type="GlobalCountCallHandler">
                  <injection>
                    <constructor>
                      <param name="name" parameterType="string">
                        <value value="handler2" />
                      </param>
                    </constructor>
                    <property name="Order" propertyType="int">
                      <value value="10" type="int"/>
                    </property>
                  </injection>
                </callHandler>
              </callHandlers>
            </policy>
          </policies>
        </add>
      </extensionConfig>
    </container>-->

    <container name="policyWithLifetimeManagedInjectedRulesAndHandlers">
      <extension type="Interception"/>

      <interception>
        <policy name="policyOne">
          <matchingRule name="rule1" type="AlwaysMatchingRule">
            <lifetime type="singleton" />
          </matchingRule>
          <matchingRule name="rule2" type="AlwaysMatchingRule"/>
          <callHandlers>
            <add name="handler1" type="GlobalCountCallHandler">
              <lifetime type="singleton"/>
              <constructor>
                <param name="callHandlerName" value="handler1" />
              </constructor>
            </add>
            <add name="handler2" type="GlobalCountCallHandler">
              <constructor>
                <param name="callHandlerName" value="handler2" />
              </constructor>
              <property name="Order" value="10" />
            </add>
          </callHandlers>
        </policy>
      </interception>
    </container>

    <container name="policyWithDuplicateRuleAndHandlerNames">
      <extension type="Interception"/>

      <interception>
        <policy name="Method2Policy">
          <matchingRule name="rule1" type="MemberNameMatchingRule">
            <lifetime type="singleton"/>
            <constructor>
              <param name="nameToMatch" value="Method2"/>
            </constructor>
          </matchingRule>
          <callHandler name="handler1" type="GlobalCountCallHandler">
            <lifetime type="singleton"/>
            <constructor>
              <param name="callHandlerName" value="Method2Handler" />
            </constructor>
          </callHandler>
        </policy>
        <policy name="Method3Policy">
          <matchingRule name="rule1" type="MemberNameMatchingRule">
            <lifetime type="singleton"/>
            <constructor>
              <param name="nameToMatch" value="Method3"/>
            </constructor>
          </matchingRule>
          <callHandler name="handler1" type="GlobalCountCallHandler">
            <lifetime type="singleton"/>
            <constructor>
              <param name="callHandlerName" value="Method3Handler" />
            </constructor>
          </callHandler>
        </policy>
      </interception>

    </container>
  </unity>
</configuration>
