<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity"
						 type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, 
						       Microsoft.Practices.Unity.Configuration" />
  </configSections>

  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">

    <namespace name="Microsoft.Practices.Unity.Configuration.Tests.TestObjects.MyGenericTypes" />
    <namespace name="Microsoft.Practices.Unity.Configuration.Tests.TestObjects" />
    <assembly name="Unity.Configuration.Tests" />

    <container name="container1">

      <!-- Register generic print service -->
      <register type="IGenericService[]" mapTo="MyPrintService[]" />

      <!-- Register item types -->
      <register type="IItem" mapTo="CompactCarItem" name="Bravo">
        <constructor>
          <param name="name" type="System.String" value="Charlie Miniature" />
          <param name="numberDoors" type="System.Int32" value="2" />
        </constructor>
      </register>
      <register type="IItem" mapTo="DiggerItem" name="Digger">
        <constructor>
          <param name="name" type="System.String" value="Echo Workhard" />
          <param name="bucketWidth" type="System.Int32" value="48" />
        </constructor>
      </register>
      <register type="IItem" mapTo="LargeTruckItem" name="Hauler">
        <constructor>
          <param name="name" type="System.String" value="Foxtrot Longhaul" />
          <param name="numberWheels" type="System.Int32" value="18" />
        </constructor>
      </register>
      <register type="IItem" mapTo="LargeTruckItem" name="Tipper">
        <constructor>
          <param name="name" type="System.String" value="Lima Bigtip" />
          <param name="numberWheels" type="System.Int32" value="12" />
        </constructor>
      </register>
      <register type="IItem" mapTo="MidsizeCarItem" name="Xray">
        <constructor>
          <param name="name" type="System.String" value="Uniform Car" />
          <param name="numberCupHolders" type="System.Int32" value="6" />
        </constructor>
      </register>
      <register type="IItem" mapTo="MidsizeCarItem" name="Common">
        <constructor>
          <param name="name" type="System.String" value="Kilo Midsized" />
          <param name="numberCupHolders" type="System.Int32" value="4" />
        </constructor>
      </register>
      <register type="IItem" mapTo="MidsizeVanItem" name="MidsizeVan">
        <constructor>
          <param name="name" type="System.String" value="November MidsizedVan" />
          <param name="maxCapacity" type="System.Int32" value="600" />
        </constructor>
      </register>
      <register type="IItem" mapTo="TractorItem" name="Tractor">
        <constructor>
          <param name="name" type="System.String" value="Foxtrot Mightypuller" />
          <param name="maxTrailerTons" type="System.Int32" value="5" />
        </constructor>
      </register>

      <!-- Register generic collection type -->
      <register type="ItemsCollection[]">
        <constructor>
          <param name="name" value="MyGenericCollection" />
          <param name="printService" />
        </constructor>
        <property name="Items" />
      </register>

      <register type="ItemsCollection[]" name="OnlyThree">
        <constructor>
          <param name="name" value="MyGenericCollection" />
          <param name="printService" />
        </constructor>
        <property name="Items">
          <array>
            <dependency name="Digger" />
            <dependency name="Common" />
            <dependency name="Tractor" />
          </array>
        </property>
      </register>

      <register type="ItemsCollection[]" name="ThroughConstructor">
        <constructor>
          <param name="name" value="MyGenericCollection" />
          <param name="printService" />
          <param name="items"/>
        </constructor>
      </register>

      <register type="ItemsCollection[]" name="ThroughConstructorWithSpecificElements">
        <constructor>
          <param name="name" value="MyGenericCollection" />
          <param name="printService" />
          <param name="items">
            <array>
              <dependency name="Bravo" />
              <dependency name="Common" />
              <dependency name="Tractor" />
            </array>
          </param>
        </constructor>
      </register>

      <register type="ItemsCollection[]" name="ArrayOfArraysThroughConstructorWithSpecificElements">
        <constructor>
          <param name="name" value="MyGenericCollection" />
          <param name="printService" />
          <param name="itemsArray">
            <array>
              <array>
                <dependency name="SuperCompact" />
                <dependency name="Common" />
                <dependency name="Tractor" />
              </array>
              <array/>
              <array>
                <dependency name="Tractor" />
              </array>
            </array>
          </param>
        </constructor>
      </register>

      <!-- optional generics -->
      <register type="ItemsCollection[]" name="optional resolvable">
        <constructor>
          <param name="name" value="MyGenericCollection" />
          <param name="printService"/>
        </constructor>
        <property name="Items">
          <array>
            <optional name="Bravo" />
          </array>
        </property>
      </register>

      <register type="ItemsCollection[]" name="optional non resolvable">
        <constructor>
          <param name="name" value="MyGenericCollection" />
          <param name="printService"/>
        </constructor>
        <property name="Items">
          <array>
            <optional name="non resolvable"/>
          </array>
        </property>
      </register>

      <register name="resolvable" type="IGenericService[]" mapTo="MyPrintService[]" />
    </container>

    <container name="dependency with type">
      <register type ="GenericArrayPropertyDependency`1">
        <property name="Stuff">
          <array>
            <dependency type="int"/>
          </array>
        </property>
      </register>
    </container>

    <container name="property with value">
      <register type ="GenericArrayPropertyDependency`1">
        <property name="Stuff">
          <array>
            <value value="0" typeConverter="System.ComponentModel.Int32Converter, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
          </array>
        </property>
      </register>
    </container>

    <container name="generic array property with value">
      <register type ="GenericArrayPropertyDependency`1">
        <property name="Stuff">
          <value value="0" typeConverter="System.ComponentModel.Int32Converter, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
        </property>
      </register>
    </container>

    <container name="generic array property with dependency with type">
      <register type ="GenericArrayPropertyDependency`1">
        <property name="Stuff">
          <array>
            <dependency name="Common" type="CompactCarItem"/>
          </array>
        </property>
      </register>
    </container>

    <container name="chained generic parameter with array">
      <register type="ItemsCollection[]">
        <constructor>
          <param name="name" value="MyGenericCollection" />
          <param name="printService">
            <array/>
          </param>
        </constructor>
      </register>
    </container>

    <container name="chained generic parameter with value">
      <register type="ItemsCollection[]">
        <constructor>
          <param name="name" value="MyGenericCollection" />
          <param name="printService">
            <value value="0" typeConverter="System.ComponentModel.Int32Converter, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
          </param>
        </constructor>
      </register>
    </container>

  </unity>
</configuration>
