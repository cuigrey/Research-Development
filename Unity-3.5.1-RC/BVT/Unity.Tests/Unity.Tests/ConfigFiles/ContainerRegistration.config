<?xml version="1.0" encoding="utf-8" ?>

<!--
Copyright (c) Microsoft Corporation. All rights reserved. See License.txt in the project root for license information.
-->
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>

  <unity>
    <typeAliases>
      <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
      <typeAlias alias="external" type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager, Microsoft.Practices.Unity" />
      <typeAlias alias="ITypeInterface" type="Unity.Tests.ContainerRegistration.ITypeInterface, Unity.Tests" />
      <typeAlias alias="ITypeAnotherInterface" type="Unity.Tests.ContainerRegistration.ITypeAnotherInterface, Unity.Tests" />
      <typeAlias alias="AnotherTypeImplementation" type="Unity.Tests.ContainerRegistration.AnotherTypeImplementation, Unity.Tests" />
      <typeAlias alias="TypeImplementation" type="Unity.Tests.ContainerRegistration.TypeImplementation, Unity.Tests" />
    </typeAliases>
    <containers>
      <container>
        <types>
          <type type="ITypeInterface"
						  mapTo="TypeImplementation">
            <lifetime type="singleton" />
          </type>
          <type type="ITypeAnotherInterface" mapTo="AnotherTypeImplementation" name="another">
            <lifetime type="external" />
          </type>
          <type type="ITypeInterface" mapTo="TypeImplementation" name="session">
            <lifetime type="Unity.Tests.TestDoubles.SessionLifetimeManager, Unity.Tests"
								  value="sessionKey" />
          </type>
          <type type="ITypeAnotherInterface" mapTo="AnotherTypeImplementation" name="transient"/>
        </types>
      </container>
    </containers>
  </unity>
</configuration>
