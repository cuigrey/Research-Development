<?xml version="1.0" encoding="utf-8" ?>

<!--
Copyright (c) Microsoft Corporation. All rights reserved. See License.txt in the project root for license information.
-->
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>
  <unity>
    <typeAliases>
      <typeAlias alias="IForTypeToInject" type="Unity.Tests.Override.IForTypeToInject, Unity.Tests"></typeAlias>
      <typeAlias alias="TypeToInject2ForTypeOverride" type="Unity.Tests.Override.TypeToInject2ForTypeOverride, Unity.Tests"></typeAlias>
      <typeAlias alias="TypeToUndergoeTypeBasedInject1" type="Unity.Tests.Override.TypeToUndergoeTypeBasedInject1, Unity.Tests"></typeAlias>      
      <typeAlias alias="string" type="System.String, mscorlib" />
      <typeAlias alias="int" type="System.Int32, mscorlib"/>
    </typeAliases>    
    <containers>
      <container name="TypeOverrideContainer">
        <types>
          <type type="IForTypeToInject" mapTo="TypeToInject2ForTypeOverride" name="CurrentTypeToInject">
         
              <constructor>
                <param name="value">
                  <value value="101" />
                </param>
              </constructor>
         
          </type>
          <type type="TypeToUndergoeTypeBasedInject1"  name="TestTypeOverrideDefaultInConfiguration">
         
              <constructor>
                <param name="injectedObject">
					<dependency name="CurrentTypeToInject" />
                </param>
              </constructor>              
         
          </type>          
        </types>
      </container>
    </containers>
  </unity>
</configuration>
