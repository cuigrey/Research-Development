<?xml version="1.0" encoding="utf-8" ?>

<!--
Copyright (c) Microsoft Corporation. All rights reserved. See License.txt in the project root for license information.
-->
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>
  <unity>
    <typeAliases>
      <typeAlias alias="string"
                 type="System.String, mscorlib"/>
      <typeAlias alias="virtualMethod"
                 type="Microsoft.Practices.Unity.InterceptionExtension.VirtualMethodInterceptor, Microsoft.Practices.Unity.Interception"/>
      <typeAlias alias="IMock"
                 type="Unity.Tests.InterceptionExtension.IMock, Unity.Tests" />
      <typeAlias alias="MyInterceptionBehavior"
                 type="Unity.Tests.InterceptionExtension.MyInterceptionBehavior, Unity.Tests" />
    </typeAliases>

	  <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration" />

	  <containers>
      <container name="">
          <register type="Unity.Tests.InterceptionExtension.ClassWithInjectedStuff, Unity.Tests">
              <constructor>
				  <param name="constructorData">
                <value value="data from config"/>
				  </param>
              </constructor>
              <property name="Data" value="property data from config" />
          </register>

		  <register type="IMock" mapTo="Unity.Tests.InterceptionExtension.MockClass, Unity.Tests">
			  <interceptor type="TransparentProxyInterceptor" />
			  <addInterface type="IMock" />
			  <interceptionBehavior type="MyInterceptionBehavior" />
          </register>
        <extensions>
          <add type="Interception" />
        </extensions>
      </container>
    </containers>
  </unity>
</configuration>
